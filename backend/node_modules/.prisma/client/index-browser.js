
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.15.0
 * Query Engine version: 659ef412370fa3b41cd7bf6e94587c1dfb7f67e7
 */
Prisma.prismaVersion = {
  client: "4.15.0",
  engine: "659ef412370fa3b41cd7bf6e94587c1dfb7f67e7"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.Order_dataScalarFieldEnum = {
  order_id: 'order_id',
  order_date: 'order_date',
  transaction_status: 'transaction_status',
  quantity: 'quantity',
  total_price: 'total_price',
  product_id: 'product_id',
  shipper_id: 'shipper_id',
  seller_id: 'seller_id',
  user_id: 'user_id'
};

exports.Prisma.Product_dataScalarFieldEnum = {
  product_id: 'product_id',
  name: 'name',
  price: 'price',
  discount: 'discount',
  quantityAvailable: 'quantityAvailable',
  category: 'category',
  currentPrice: 'currentPrice',
  size: 'size',
  productColor: 'productColor'
};

exports.Prisma.Product_imageScalarFieldEnum = {
  product_id: 'product_id',
  image_id: 'image_id',
  url: 'url'
};

exports.Prisma.Product_reviewScalarFieldEnum = {
  review_id: 'review_id',
  rate: 'rate',
  comment: 'comment',
  product_id: 'product_id',
  user_id: 'user_id'
};

exports.Prisma.Seller_dataScalarFieldEnum = {
  brand_id: 'brand_id',
  product_brand: 'product_brand',
  access_name: 'access_name',
  access_pass: 'access_pass'
};

exports.Prisma.Shipper_dataScalarFieldEnum = {
  shipper_id: 'shipper_id',
  shipper_company: 'shipper_company',
  service_type: 'service_type'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.User_addressScalarFieldEnum = {
  user_id: 'user_id',
  recipient_firstName: 'recipient_firstName',
  recipient_lastName: 'recipient_lastName',
  recipient_phone: 'recipient_phone',
  recipient_address: 'recipient_address',
  recipient_postal: 'recipient_postal',
  recipient_country: 'recipient_country'
};

exports.Prisma.User_dataScalarFieldEnum = {
  user_id: 'user_id',
  user_firstName: 'user_firstName',
  user_email: 'user_email',
  user_pass: 'user_pass',
  user_lastName: 'user_lastName'
};
exports.product_data_productColor = {
  Black: 'Black',
  White: 'White',
  Grey: 'Grey'
};

exports.product_data_size = {
  S: 'S',
  M: 'M',
  L: 'L',
  XL: 'XL'
};

exports.Prisma.ModelName = {
  order_data: 'order_data',
  product_data: 'product_data',
  product_image: 'product_image',
  product_review: 'product_review',
  seller_data: 'seller_data',
  shipper_data: 'shipper_data',
  user_address: 'user_address',
  user_data: 'user_data'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
