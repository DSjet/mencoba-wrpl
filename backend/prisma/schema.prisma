generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model order_data {
  order_id           Int           @id @default(autoincrement())
  order_date         DateTime?     @db.Date
  transaction_status String?       @db.VarChar(255)
  quantity           Int?
  total_price        Float?        @db.Float
  product_id         Int?
  shipper_id         Int?
  seller_id          Int?
  user_id            Int?
  product_data       product_data? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "order_data_ibfk_1")
  shipper_data       shipper_data? @relation(fields: [shipper_id], references: [shipper_id], onDelete: NoAction, onUpdate: NoAction, map: "order_data_ibfk_2")
  seller_data        seller_data?  @relation(fields: [seller_id], references: [brand_id], onDelete: NoAction, onUpdate: NoAction, map: "order_data_ibfk_3")
  user_data          user_data?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "order_data_ibfk_4")

  @@index([product_id], map: "product_id")
  @@index([seller_id], map: "seller_id")
  @@index([shipper_id], map: "shipper_id")
  @@index([user_id], map: "user_id")
}

model product_data {
  product_id        Int                        @id @default(autoincrement())
  name              String?                    @unique(map: "name") @db.VarChar(255)
  price             Float?                     @db.Float
  discount          Float?                     @db.Float
  quantityAvailable Int?
  category          String?                    @db.VarChar(255)
  currentPrice      Float?                     @db.Float
  size              product_data_size?
  productColor      product_data_productColor?
  order_data        order_data[]
  product_image     product_image[]
  product_review    product_review[]
}

model product_image {
  product_id   Int
  image_id     Int          @id @unique(map: "image_id") @default(autoincrement())
  url          String?      @db.VarChar(255)
  product_data product_data @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "product_image_ibfk_1")

  @@index([product_id], map: "product_id")
}

model product_review {
  review_id    Int           @id @default(autoincrement())
  rate         Float?        @db.Float
  comment      String?       @db.VarChar(255)
  product_id   Int?
  user_id      Int?
  product_data product_data? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "product_review_ibfk_1")
  user_data    user_data?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "product_review_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([user_id], map: "user_id")
}

model seller_data {
  brand_id      Int          @id @default(autoincrement())
  product_brand String?      @db.VarChar(255)
  access_name   String?      @db.VarChar(255)
  access_pass   String?      @db.VarChar(255)
  order_data    order_data[]
}

model shipper_data {
  shipper_id      Int          @id @default(autoincrement())
  shipper_company String?      @db.VarChar(255)
  service_type    String?      @db.VarChar(255)
  order_data      order_data[]
}

model user_address {
  user_id             Int       @id
  recipient_firstName String?   @db.VarChar(255)
  recipient_lastName  String?   @db.VarChar(255)
  recipient_phone     String?   @db.VarChar(15)
  recipient_address   String?   @db.VarChar(255)
  recipient_postal    String?   @db.VarChar(10)
  recipient_country   String?   @db.VarChar(255)
  user_data           user_data @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "user_address_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user_data {
  user_id        Int              @id @default(autoincrement())
  user_firstName String?          @db.VarChar(255)
  user_email     String?          @unique(map: "user_email") @db.VarChar(255)
  user_pass      String?          @db.VarChar(255)
  user_lastName  String?          @db.VarChar(255)
  order_data     order_data[]
  product_review product_review[]
  user_address   user_address?
}

enum product_data_size {
  S
  M
  L
  XL
}

enum product_data_productColor {
  Black
  White
  Grey
}
